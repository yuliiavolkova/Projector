"use strict";

// –ë–∞–∑–æ–≤–∏–π –∫–ª–∞—Å Student - —Ü–µ –∫–ª–∞—Å-–ø—Ä–µ–¥–æ–∫ –¥–ª—è –≤—Å—ñ—Ö 4 –∫–ª–∞—Å—ñ–≤

class Student {
  constructor(name, year, wand) {
    this.name = name; // –Ü–º'—è —Å—Ç—É–¥–µ–Ω—Ç–∞
    this.year = year; // –†—ñ–∫ –Ω–∞–≤—á–∞–Ω–Ω—è
    this.wand = wand; // –ü–∞–ª–∏—á–∫–∞ —Å—Ç—É–¥–µ–Ω—Ç–∞
  }

  attendClass() {
    console.log(`${this.name} –≤—ñ–¥–≤—ñ–¥—É—î —É—Ä–æ–∫–∏ –Ω–∞ ${this.year}-–º—É –∫—É—Ä—Å—ñ.`);
  }

  castSpell(spell) {
    console.log(`${this.name} –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –∑–∞–∫–ª—è—Ç—Ç—è: ${spell}.`);
  }

  useWand() {
    console.log(`${this.name} –º–∞—Ö–∞—î –ø–∞–ª–∏—á–∫–æ—é –∑ –º–∞—Ç–µ—Ä—ñ–∞–ª—É: ${this.wand}.`);
  }
}

// AmbitiousStudent ‚Äî —Å–ø—ñ–ª—å–Ω–∏–π –¥–ª—è –∫–ª–∞—Å—ñ–≤ Gryffindor —ñ Slytherin
class AmbitiousStudent extends Student {
  constructor(name, year, wand, ambitionLevel) {
    super(name, year, wand);
    this.ambitionLevel = ambitionLevel;
  }

  // –°–ø—ñ–ª—å–Ω–∏–π –º–µ—Ç–æ–¥ –¥–ª—è –ª—ñ–¥–µ—Ä—Å—Ç–≤–∞
  lead() {
    return `${this.name} –¥–µ–º–æ–Ω—Å—Ç—Ä—É—î —Å–≤–æ—ó –ª—ñ–¥–µ—Ä—Å—å–∫—ñ —è–∫–æ—Å—Ç—ñ –∑ —Ä—ñ–≤–Ω–µ–º –∞–º–±—ñ—Ü—ñ–π ${this.ambitionLevel}.`;
  }
}

class Gryffindor extends AmbitiousStudent {
  #houseMotto; // –ø—Ä–∏–≤–∞—Ç–Ω–∞ –≤–ª–∞—Å–Ω—ñ—Å—Ç—å –¥–ª—è —Ü—å–æ–≥–æ –∫–ª–∞—Å—É

  constructor(name, year, wand, braveryLevel) {
    super(name, year, wand);
    this.braveryLevel = braveryLevel;
    this.#houseMotto = "–°–º—ñ–ª–∏–≤—ñ—Å—Ç—å, –≤—ñ–¥–≤–∞–≥–∞, —Ä—ñ—à—É—á—ñ—Å—Ç—å";
  }

  fightForJustice() {
    return `${this.name} –±–æ—Ä–µ—Ç—å—Å—è –∑–∞ —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤—ñ—Å—Ç—å –∑ —Ä—ñ–≤–Ω–µ–º —Ö–æ—Ä–æ–±—Ä–æ—Å—Ç—ñ ${this.braveryLevel}.`;
  }

  makeDaringMove() {
    return `${this.name} —Ä–æ–±–∏—Ç—å —Å–º—ñ–ª–∏–≤–∏–π —Ö—ñ–¥.`;
  }

  revealMotto() {
    return `“ê—Ä–∏—Ñ—ñ–Ω–¥–æ—Ä—Ü—ñ –∂–∏–≤—É—Ç—å –∑–∞ –≥–∞—Å–ª–æ–º: "${this._houseMotto}".`; // –ø—Ä–∏–≤–∞—Ç–Ω–∞ –≤–ª–∞—Å–Ω—ñ—Å—Ç—å –¥–ª—è —Ü—å–æ–≥–æ –∫–ª–∞—Å—É
  }
}

class Slytherin extends AmbitiousStudent {
  #secretChamber; // –ø—Ä–∏–≤–∞—Ç–Ω–∞ –≤–ª–∞—Å–Ω—ñ—Å—Ç—å –¥–ª—è —Ü—å–æ–≥–æ –∫–ª–∞—Å—É

  constructor(name, year, wand, ambitionLevel) {
    super(name, year, wand);
    this.ambitionLevel = ambitionLevel;
    this.#secretChamber = "–¢–∞—î–º–Ω–∞ –∫—ñ–º–Ω–∞—Ç–∞";
  }

  schemePlan() {
    return `${this.name} —Å—Ç–≤–æ—Ä—é—î —Ö–∏—Ç—Ä–∏–π –ø–ª–∞–Ω –∑ —Ä—ñ–≤–Ω–µ–º –∞–º–±—ñ—Ü—ñ–π ${this.ambitionLevel}.`;
  }

  speakParseltongue() {
    return `${this.name} —à–µ–ø–æ—á–µ –∑–º—ñ—ó–Ω–æ—é –º–æ–≤–æ—é.`;
  }

  revealSecretChamber() {
    return `–°–ª–∏–∑–µ—Ä–∏–Ω—Ü—ñ –º–∞—é—Ç—å –¥–æ—Å—Ç—É–ø –¥–æ ${this._secretChamber}.`; // –ø—Ä–∏–≤–∞—Ç–Ω–∞ –≤–ª–∞—Å–Ω—ñ—Å—Ç—å –¥–ª—è —Ü—å–æ–≥–æ –∫–ª–∞—Å—É
  }
}

class Hufflepuff extends Student {
  #houseRecipe; // –ø—Ä–∏–≤–∞—Ç–Ω–∞ –≤–ª–∞—Å–Ω—ñ—Å—Ç—å –¥–ª—è —Ü—å–æ–≥–æ –∫–ª–∞—Å—É

  constructor(name, year, wand, loyaltyLevel) {
    super(name, year, wand);
    this.loyaltyLevel = loyaltyLevel;
    this._houseRecipe = "–°–µ–∫—Ä–µ—Ç–Ω–∏–π —Ä–µ—Ü–µ–ø—Ç –≥–∞—Ä–±—É–∑–æ–≤–æ–≥–æ –ø–∏—Ä–æ–≥–∞";
  }

  workHard() {
    return `${this.name} –Ω–∞–ø–æ–ª–µ–≥–ª–∏–≤–æ –ø—Ä–∞—Ü—é—î, –≤—ñ–¥–¥–∞–Ω—ñ—Å—Ç—å: ${this.loyaltyLevel}.`;
  }

  beLoyal() {
    return `${this.name} –∑–∞–ª–∏—à–∞—î—Ç—å—Å—è –≤—ñ—Ä–Ω–∏–º —Å–≤–æ—ó–º –¥—Ä—É–∑—è–º —ñ –±—É–¥–∏–Ω–∫—É.`;
  }

  revealRecipe() {
    return `${this.name} –∑–Ω–∞—î ${this._houseRecipe}.`; // –ø—Ä–∏–≤–∞—Ç–Ω–∞ –≤–ª–∞—Å–Ω—ñ—Å—Ç—å –¥–ª—è —Ü—å–æ–≥–æ –∫–ª–∞—Å—É
  }
}
class Ravenclaw extends Student {
  #houseRiddle; // –ø—Ä–∏–≤–∞—Ç–Ω–∞ –≤–ª–∞—Å–Ω—ñ—Å—Ç—å –¥–ª—è —Ü—å–æ–≥–æ –∫–ª–∞—Å—É

  constructor(name, year, wand, intelligenceLevel) {
    super(name, year, wand);
    this.intelligenceLevel = intelligenceLevel;
    this._houseRiddle = "–¢–∞—î–º–Ω–∏—Ü—è –û—Ä–ª–∞";
  }

  solveRiddle() {
    return `${this.name} –≤–∏—Ä—ñ—à—É—î –≥–æ–ª–æ–≤–æ–ª–æ–º–∫–∏ –∑ —ñ–Ω—Ç–µ–ª–µ–∫—Ç–æ–º —Ä—ñ–≤–Ω—è ${this.intelligenceLevel}.`;
  }

  inventSpell() {
    return `${this.name} –≤–∏–Ω–∞—Ö–æ–¥–∏—Ç—å –Ω–æ–≤–µ –∑–∞–∫–ª—è—Ç—Ç—è.`;
  }

  revealRiddle() {
    return `–†–µ–π–≤–µ–Ω–∫–ª–æ–≤—Ü—ñ —Ä–æ–∑–≥–∞–¥—É—é—Ç—å ${this._houseRiddle}.`; // –ø—Ä–∏–≤–∞—Ç–Ω–∞ –≤–ª–∞—Å–Ω—ñ—Å—Ç—å –¥–ª—è —Ü—å–æ–≥–æ –∫–ª–∞—Å—É
  }
}

// –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –∫–ª–∞—Å—ñ–≤

// Gryffindor —Å—Ç—É–¥–µ–Ω—Ç
const harry = new Gryffindor("–ì–∞—Ä—Ä—ñ –ü–æ—Ç—Ç–µ—Ä", 3, "–û–ª–µ–Ω—å", 10);
console.log("üöÄ ~ harry:", harry);
console.log(harry.attendClass());
console.log(harry.fightForJustice());
console.log(harry.makeDaringMove());
console.log(harry.revealMotto());
console.log(harry.lead()); // –ú–µ—Ç–æ–¥ –∑ –∫–ª–∞—Å—É AmbitiousStudent

// Slytherin —Å—Ç—É–¥–µ–Ω—Ç
const draco = new Slytherin("–î—Ä–∞–∫–æ –ú–µ–ª—Ñ–æ–π", 3, "–¢–∏—Å", 8);
console.log("üöÄ ~ draco:", draco);
console.log(draco.attendClass());
console.log(draco.schemePlan());
console.log(draco.speakParseltongue());
console.log(draco.revealSecretChamber());
console.log(draco.lead()); // –ú–µ—Ç–æ–¥ –∑ –∫–ª–∞—Å—É AmbitiousStudent

// Hufflepuff —Å—Ç—É–¥–µ–Ω—Ç
const cedric = new Hufflepuff("–°–µ–¥—Ä—ñ–∫ –î—ñ“ë–æ—Ä—ñ", 4, "–Ø–±–ª—É–Ω—è", 9);
console.log("üöÄ ~ cedric:", cedric);
console.log(cedric.attendClass());
console.log(cedric.workHard());
console.log(cedric.beLoyal());
console.log(cedric.revealRecipe());

// Ravenclaw —Å—Ç—É–¥–µ–Ω—Ç
const luna = new Ravenclaw("–õ—É–Ω–∞ –õ–∞–≤“ë—É–¥", 2, "–û—Å–∞", 9);
console.log("üöÄ ~ luna:", luna);
console.log(luna.attendClass());
console.log(luna.solveRiddle());
console.log(luna.inventSpell());
console.log(luna.revealRiddle());
